<# 
.SYNOPSIS 
    Log parser for  logs generated by Loki.  
    Vasken Houdoverdov
.DESCRIPTION 
    Run as: 'Parse-LokiLog $Path'
#>  

function Parse-LokiLog {
   Param([string]$LogFile)

if (!$LogFile) {throw 'Specify a path to one or more Loki log files using the -Path parameter'}
if (!$(Select-String -Ca LOKI $LogFile)) {throw 'The log file specified does not contain Loki logs'}

$YaraMatchSet = @();
$ListeningProcessSet = @();

gc $LogFile | % { if($_ -match 'Z (.+) LOKI: Yara Rule MATCH: (.+) TYPE: (.+) DESCRIPTION: (.+) FILE: (.+) FIRST_BYTES: (.+) MD5: ([a-f0-9]{32}) SHA1: ([0-9a-f]{40}) SHA256: ([A-Fa-f0-9]{64}) MATCHES: (.*)$') { 

$MatchProps = [Ordered]@{
Hostname =    $Matches[1]
RuleMatch =   $Matches[2]
Type =        $Matches[3]
Description = $Matches[4]
File =        $Matches[5]
FirstBytes =  $Matches[6]
MD5sum =      $Matches[7]
SHA1sum =     $Matches[8]
SHA256 =      $Matches[9]
Matches =     $Matches[10]
}

$YaraMatchSet += $(New-Object PSObject -Property $MatchProps)}}

gc $LogFile | % { if($_ -match 'Z (.+) LOKI: Listening process PID: (\d+) NAME: (.+) COMMAND: (.+) IP: (.+) PORT: (\d+)') { 

$MatchProps = [Ordered]@{
Hostname =    $Matches[1]
PID =         $Matches[2]
ProcessName = $Matches[3]
Command =     $Matches[4]
IP =          $Matches[5]
Port =        $Matches[6]
}

$ListeningProcessSet += $(New-Object PSObject -Property $MatchProps)}}

$YaraMatchSet | ConvertTo-Html -Head $(Get-Content styles.css) -body "<h4>Loki Report (YARA Matches) - Generated on $(Get-Date) by $env:USERNAME</h4>" | Out-File .\Loki_YARA_Matches.html 
$ListeningProcessSet | ConvertTo-Html -Head $(Get-Content styles.css) -body "<h4>Loki Report (Listening Processes) - Generated on $(Get-Date) by $env:USERNAME</h4>" | Out-File .\Loki_Listening.html 
}
Export-ModuleMember *